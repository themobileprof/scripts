#!/bin/bash

# Install Azure CLI (user-level installation)


# Constants ########
readonly WAITLONG=3
readonly WAITSMALL=1
####################

install()
{
	sleep $WAITLONG
	pkg install -y $1
}


# Main function
main() {
    install_azure_cli
}

# Get Device 32-bit/64-bit
#device_64_bit() {
#    cpu=$(uname -m)
 #   if [[ $cpu == *"64"* ]]; then
#        return 0
#    elif [[ $cpu == *"armv7"* ]]; then
 #       return 1
#    else
 #       return 0
 #   fi
# }

# Download and Install Azure CLI
install_azure_cli() {
    curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python get-pip.py
    install binutils

    apt-get update -fq && 
    \apt-get install -q openssl libffi make && 
    \apt-get install -q openssh && 
    \pip install --user virtualenv
    
     
    PATH=$PATH:~/.local/bin
    export PATH

    # Add the PATH commands to .bashrc
    echo 'PATH=$PATH:~/.local/bin' >> ~/.bashrc
    echo 'export PATH' >> ~/.bashrc

    # Reload .bashrc to apply changes immediately
    source ~/.bashrc

 
     source ~/.bashrc
     virtualenv ~/.local/lib/azure-cli
     cd ~/.local/lib/azure-cli
     source ./bin/activate

     pip install cffi
     pip install azure-cli
    
     pip freeze > requirements.txt
   
}

# Main App
main




# EDIT OR REMOVE THIS LATER

# it must be executed with admin privileges, i.e. with `sudo`.

# Main function
# main() {
#     install_azure_cli
# }

# # Get Device 32-bit/64-bit
# device_64_bit() {
#     cpu=$(uname -m)
#     if [[ $cpu == *"64"* ]]; then
#         return 0
#     elif [[ $cpu == *"armv7"* ]]; then
#         return 1
#     else
#         return 0
#     fi
# }

# # Download and Install Azure CLI
# install_azure_cli() {
#     device_64_bit
#     bit64=$?
#     if [ $bit64 -eq 0 ]; then
#         curl -sL "https://aka.ms/InstallAzureCLIDeb" | sudo bash
#     else
#         curl -sL "https://aka.ms/InstallAzureCLIDeb" | sudo bash
#     fi
# }

# # Main App
# main
